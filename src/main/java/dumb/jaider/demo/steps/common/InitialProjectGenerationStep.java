package dumb.jaider.demo.steps.common;

import dumb.jaider.demo.DemoContext;
import dumb.jaider.demo.DemoStep;
import dumb.jaider.ui.TUI;
import dumb.jaider.workflow.CodeGenerationWorkflow;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.nio.file.Path;

public class InitialProjectGenerationStep implements DemoStep {
    private static final Logger logger = LoggerFactory.getLogger(InitialProjectGenerationStep.class);

    private final String description;
    private final String packageName;
    private final String className;
    private final String pomContent;
    private final String[] verificationKeywords;
    private final String contextKey;

    public InitialProjectGenerationStep(String description, String packageName, String className, String pomContent, String contextKey, String... verificationKeywords) {
        this.description = description;
        this.packageName = packageName;
        this.className = className;
        this.pomContent = pomContent;
        this.contextKey = contextKey;
        this.verificationKeywords = verificationKeywords;
    }

    @Override
    public boolean execute(TUI tui, CodeGenerationWorkflow workflow, DemoContext context) throws Exception {
        logger.info("Executing InitialProjectGenerationStep for project description: \"{}\"", description);

        tui.showModalMessage("Initial Project Generation",
                "Jaider will now attempt to generate the initial project structure and code based on the following description:\n" +
                "\"" + description + "\"\n\nThis includes generating the main class ('" + className + "') " +
                "in package '" + packageName + "' and a pom.xml file.\n\nThis might take a moment...").join();

        CodeGenerationWorkflow.ProjectGenerationResult result = workflow.generateInitialProject(
            description, packageName, className, pomContent, verificationKeywords
        );

        context.setCurrentCode(result.generatedCode());
        context.setProjectPath(result.projectPath());
        context.setCurrentFilePath(result.javaFilePath());
        context.put(contextKey, result.generatedCode());
        logger.info("Initial project generated successfully. Main class code length: {}, Project Path: {}",
                result.generatedCode().length(), result.projectPath());

        tui.showModalMessage("Code Generated",
                "The initial code for '" + className + "' has been generated by the Language Model.\n" +
                "Click OK to view the content of the main game file.").join();

        tui.showScrollableText("Generated Code: " + className, result.generatedCode()).join();

        tui.showModalMessage("View Complete",
                "You have viewed the initially generated code.\nPress OK to proceed to the next step.").join();
        return true;
    }
}
